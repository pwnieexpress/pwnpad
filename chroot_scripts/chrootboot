# /system/bin/chrootboot
# Start chroot environment and services at system startup

# Set SELinux to permissive
su 0 setenforce 0

# Use the fourth loopback device to leave the first couple open
export LOOP_BACK=/dev/block/loop4
export SOURCE_IMG=/data/local/kali_img/kali.img
export NEW_ROOT=/data/local/kali

mount -o loop -t ext4 $SOURCE_IMG $NEW_ROOT

# Mount other filesystems for chroot environment
/system/xbin/busybox mount --rbind /dev $NEW_ROOT/dev
/system/xbin/busybox mount --rbind /proc $NEW_ROOT/proc
/system/xbin/busybox mount --rbind /sys $NEW_ROOT/sys

# Mount Android filesystems for chroot environment
/system/xbin/busybox mount --rbind /data/media/0 $NEW_ROOT/sdcard
/system/xbin/busybox mount --rbind /system $NEW_ROOT/system

sysctl -w net.ipv4.ip_forward=1 &> /dev/null

# Run script to assign interfaces at system startup (wlan0 internal, wlan1 TP-Link)
/system/bin/wlan_interface_assigner.sh &

# Setup environment variables for shell environment.
export HOME=/root
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export TERM=xterm-color
unset LD_PRELOAD

# Copy mounts so chroot can see what is mounted
/system/xbin/busybox chroot $NEW_ROOT /bin/cp /proc/mounts /etc/mtab

# Start services in chroot environment
/system/xbin/busybox chroot $NEW_ROOT /etc/init.d/cron start
/system/xbin/busybox chroot $NEW_ROOT /etc/init.d/hermes start
/system/xbin/busybox chroot $NEW_ROOT /etc/init.d/insight_api start

# If first_boot.sh is in chroot root filesystem (/data/local/kali); then
# run it to generate SSH keys, etc.
# Run this last in /system/bin/chrootboot
if [ -x $NEW_ROOT/first_boot.sh ]; then
  /system/xbin/busybox chroot $NEW_ROOT /first_boot.sh
fi
